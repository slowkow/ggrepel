% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/geom-point-repel.R
\name{geom_point_repel}
\alias{geom_point_repel}
\title{Repulsive points.}
\usage{
geom_point_repel(mapping = NULL, data = NULL, stat = "identity",
  parse = FALSE, ..., box.padding = unit(0.25, "lines"),
  point.padding = unit(1e-06, "lines"), segment.size = 0.5,
  segment.alpha = 0.5, arrow = NULL, force = 1, max.iter = 2000,
  nudge_x = 0, nudge_y = 0, na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2]{aes}} or
\code{\link[ggplot2]{aes_}}. If specified and \code{inherit.aes = TRUE} (the
default), is combined with the default mapping at the top level of the
plot. You only need to supply \code{mapping} if there isn't a mapping
defined for the plot.}

\item{data}{A data frame. If specified, overrides the default data frame
defined at the top level of the plot.}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{parse}{If TRUE, the labels will be parsed into expressions and
displayed as described in ?plotmath}

\item{...}{other arguments passed on to \code{\link[ggplot2]{layer}}. There are
  three types of arguments you can use here:

  \itemize{
    \item Aesthetics: to set an aesthetic to a fixed value, like
       \code{color = "red"} or \code{size = 3}.
    \item Other arguments to the layer, for example you override the
      default \code{stat} associated with the layer.
    \item Other arguments passed on to the stat.
  }}

\item{box.padding}{Amount of padding around bounding box. Defaults to
\code{unit(0.25, "lines")}.}

\item{point.padding}{Amount of padding around labeled point. Defaults to
\code{unit(0, "lines")}.}

\item{segment.size}{Width of line segment connecting the data point to
the text label, in mm.}

\item{segment.alpha}{Transparency of the segment, in \code{[0,1]}. Makes segments half transparent by default.}

\item{arrow}{specification for arrow heads, as created by \code{\link[grid]{arrow}}}

\item{force}{Force of repulsion between overlapping text labels. Defaults
to 1.}

\item{max.iter}{Maximum number of iterations to try to resolve overlaps.
Defaults to 2000.}

\item{nudge_x, nudge_y}{Horizontal and vertical adjustments to nudge the
starting position of each text label.}

\item{na.rm}{If \code{FALSE} (the default), removes missing values with
a warning.  If \code{TRUE} silently removes missing values.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2]{borders}}.}
}
\description{
\code{geom_point_repel} adds points directly to the plot after moving them
from the starting position.
}
\details{
These geoms are based on \code{\link[ggplot2]{geom_point}} and
\code{\link[ggplot2]{geom_label}}. See the documentation for those
functions for more details. Differences from those functions are noted
here.
}
\section{\code{geom_point_repel}}{

}
\examples{

p <- ggplot(mtcars, aes(x=mpg,y=cyl))

# Avoid overlaps by repelling text labels
p + geom_point_repel()
p + geom_point_repel(aes(size=mpg, color=factor(cyl)))


# Add arrows
p +
  geom_point(colour = "red") +
  geom_text_repel(arrow = arrow(length = unit(0.02, "npc")), box.padding = unit(1, "lines"))

}

